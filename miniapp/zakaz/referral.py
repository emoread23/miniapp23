from database import get_db, User, ReferralBonus
from config import REFERRAL_PERCENTS, LEVELS
from notifications import notify_referral_bonus
import logging
import secrets

logger = logging.getLogger(__name__)

def generate_referral_code() -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞"""
    while True:
        code = secrets.token_hex(4).upper()
        db = next(get_db())
        if not db.query(User).filter(User.referral_code == code).first():
            return code

def get_referral_link(user: User) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return f"https://t.me/{user.username}?start={user.referral_code}"

def process_referral_bonus(referrer: User, referred: User, amount: float) -> bool:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –±–æ–Ω—É—Å–∞ –¥–ª—è —É—Ä–æ–≤–Ω—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        bonus_percent = REFERRAL_PERCENTS[referrer.level]
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É –±–æ–Ω—É—Å–∞
        bonus_amount = amount * (bonus_percent / 100)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –±–æ–Ω—É—Å–µ
        db = next(get_db())
        referral_bonus = ReferralBonus(
            referrer_id=referrer.id,
            referred_id=referred.id,
            amount=bonus_amount,
            percent=bonus_percent
        )
        db.add(referral_bonus)
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–µ—Ä—É
        referrer.balance += bonus_amount
        referrer.referral_earnings += bonus_amount
        
        db.commit()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notify_referral_bonus(referrer, referred, bonus_amount)
        
        logger.info(f"–ù–∞—á–∏—Å–ª–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {referrer.id}: {bonus_amount} USDT")
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞: {e}")
        return False

def get_referral_stats(user: User) -> dict:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    try:
        db = next(get_db())
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        referrals = db.query(User).filter(User.referrer_id == user.id).all()
        
        # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_referrals = len(referrals)
        active_referrals = sum(1 for r in referrals if r.total_deposit > 0)
        total_earnings = user.referral_earnings
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        recent_referrals = db.query(User).filter(
            User.referrer_id == user.id
        ).order_by(User.created_at.desc()).limit(5).all()
        
        return {
            'total_referrals': total_referrals,
            'active_referrals': active_referrals,
            'total_earnings': total_earnings,
            'recent_referrals': recent_referrals
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {e}")
        return {
            'total_referrals': 0,
            'active_referrals': 0,
            'total_earnings': 0,
            'recent_referrals': []
        }

def check_referral_achievements(user: User) -> list:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    try:
        achievements = []
        db = next(get_db())
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        referral_count = user.referral_count
        for level, params in LEVELS.items():
            if referral_count >= params['requiredReferrals']:
                achievement = {
                    'type': 'referral_count',
                    'level': level,
                    'count': params['requiredReferrals']
                }
                achievements.append(achievement)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∫—É —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        if user.referral_earnings >= 1000:
            achievement = {
                'type': 'referral_earnings',
                'amount': 1000
            }
            achievements.append(achievement)
        
        return achievements
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã: {e}")
        return []

def format_referral_stats(stats: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    text = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:\n\n"
    text += f"üë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {stats['total_referrals']}\n"
    text += f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {stats['active_referrals']}\n"
    text += f"üí∞ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: {stats['total_earnings']:.2f} USDT\n\n"
    
    if stats['recent_referrals']:
        text += "üÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:\n"
        for ref in stats['recent_referrals']:
            text += f"‚Ä¢ @{ref.username} - {ref.created_at.strftime('%d.%m.%Y')}\n"
    
    return text 